{"version":3,"sources":["authentication/redux/userAuthReducer.js","authentication/redux/userAuthTypes.js","application/reduxStore.js","game/CreateGame/components/SelectCategories.jsx","game/CreateGame/pages/CreateGame.jsx","history.js","game/CurrentGame/components/GameFinished.jsx","game/CurrentGame/components/GameMarking.jsx","game/CurrentGame/components/GameGrid.jsx","game/CurrentGame/pages/CurrentGame.jsx","application/pages/Home.jsx","authentication/fetchUserAuth.js","authentication/pages/Login.jsx","authentication/redux/userAuthActions.js","authentication/pages/Signup.jsx","application/components/Navbar.jsx","App.jsx","index.js"],"names":["initialState","token","currentUser","status","isLoading","isRegistered","isLogged","userAuthReducer","state","action","type","user","Cookies","remove","rootReducer","combineReducers","auth","store","createStore","applyMiddleware","thunkMiddleware","subscribe","console","log","getState","SelectCategories","tg","useState","categories","setCategories","selectCategories","setSelectCategories","api_url","process","useEffect","a","fetch","method","headers","response","json","text","fetchData","map","category","key","id","onClick","filter","element","transfer","name","className","selectCategory","CreateGame","isGameReady","gameIdForHome","useSelector","maxPlayer","setMaxPlayer","testCateg","setTestCateg","gameId","setGameId","isReady","setIsReady","isSent","setIsSent","create","e","preventDefault","document","getElementsByClassName","innerText","split","CreateAGame","maxGuests","data","game","creator_id","winner_id","max_guests","Authorization","get","body","JSON","stringify","then","createJoinCategGame","categId","dataCategGames","join_category_game","game_id","category_id","ok","forEach","categ","osefTest","onSubmit","value","onChange","target","placeholder","createBrowserHistory","GameFinished","score","history","push","GameMarking","dataResults","results","setResults","setScore","count","setCount","addScore","int","Object","keys","length","style","listStyle","result","GameGrid","setData","test","setTest","useHistory","categoriesObject","fetchGame","stop","user_id","tmp","elements","namedItem","CurrentGame","Home","gameIsReady","setGameIsReady","fetchUserLogin","email","password","userToLog","error","alert","Login","dispatch","useDispatch","setEmail","setPassword","set","required","Signup","password_confirmation","setPassword_confirmation","username","setUsername","catch","fetchUserRegister","Navbar","to","App","path","exact","ReactDOM","render","reduxStore","querySelector"],"mappings":"sNAaMA,EAAe,CACnBC,MAAO,KACPC,YAAa,KACbC,OAAQ,KACRC,WAAW,EACXC,cAAc,EACdC,UAAU,GAqDGC,EAlDS,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACxD,OAAQA,EAAOC,MACb,ICpByB,gBDqBvB,OAAO,2BACFF,GADL,IAEEE,KCvBqB,gBDwBrBT,MAAOQ,EAAOE,KAAKV,MACnBC,YAAaO,EAAOE,KAAKA,KACzBP,WAAW,EACXC,cAAc,EACdC,UAAU,IAEd,IC7BsB,aD8BpB,OAAO,2BACFE,GADL,IAEEE,KChCkB,aDiClBP,OAAQM,EAAON,OACfC,WAAW,IAEf,ICtCyB,gBDuCvB,OAAO,2BACFI,GADL,IAEEE,KCzCqB,gBD0CrBP,OAAQM,EAAON,SAEnB,IC/C4B,mBDgD1B,OAAO,2BACFK,GADL,IAEEE,KClDwB,mBDmDxBC,KAAMF,EAAOE,KACbR,OAAQM,EAAON,OACfC,WAAW,EACXC,cAAc,IAElB,IClD0B,iBDqDxB,OAFAO,IAAQC,OAAO,SACfD,IAAQC,OAAO,QACR,2BACFL,GADL,IAEEP,MAAO,KACPC,YAAa,KACbI,UAAU,EACVD,cAAc,IAGlB,QACE,OAAOG,IE/DPM,EAAcC,YAAgB,CAClCC,KAAMT,IAGFU,EAAQC,YAAYJ,EAAaK,YAAgBC,MACvDH,EAAMI,WAAU,kBAAMC,QAAQC,IAAIN,EAAMO,eAEzBP,Q,gDCTFQ,EAAmB,SAAC,GAAU,IAATC,EAAQ,EAARA,GAAQ,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,OAEQF,mBAAS,IAFjB,mBAEjCG,EAFiC,KAEfC,EAFe,KAGlCC,EAAUC,sCAEhBC,qBAAU,WAAI,4CACZ,8BAAAC,EAAA,sEAEyBC,MAAM,GAAD,OAAIJ,EAAJ,cAAyB,CACjDK,OAAQ,MACRC,QAAS,CACP,eAAgB,sBALxB,cAEQC,EAFR,gBASuBA,EAASC,OAThC,OASUC,EATV,OAUIZ,EAAcY,GAVlB,4CADY,uBAAC,WAAD,wBAaZC,KAEA,IAWF,OAJAR,qBAAU,WACRR,EAAGI,KACF,CAACA,IAGF,oCACE,6BACI,kDACA,4BACHF,EAAWe,KAAI,SAAAC,GAAQ,OAEpB,wBAAIC,IAAKD,EAASE,GAAIC,QAAS,kBAhBtB,SAACH,GAChBf,EAAeD,EAAWoB,QAAO,SAAAC,GAAO,OAAIA,EAAQH,KAAOF,EAASE,OACpEf,EAAoB,GAAD,mBAAKD,GAAL,CAAuBc,KAcCM,CAASN,KAAYA,EAASO,UAIvE,uDACI,wBAAIC,UAAU,cACjBtB,EAAiBa,KAAI,SAAAU,GAAc,OAEhC,wBAAIR,IAAKQ,EAAeP,IAAMO,EAAeF,aC1C1CG,EAAa,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACjCtD,EAAcuD,aAAY,SAAAjD,GAAK,OAAIA,EAAMQ,KAAKd,eADM,GAE7CuD,aAAY,SAAAjD,GAAK,OAAIA,EAAMQ,QACNW,mBAAS,KAHe,mBAGnD+B,EAHmD,KAGxCC,EAHwC,OAItBhC,mBAAS,IAJa,mBAInDC,EAJmD,KAIvCC,EAJuC,OAKxBF,mBAAS,IALe,mBAKnDiC,EALmD,KAKxCC,EALwC,OAM9BlC,mBAAS,IANqB,mBAMnDmC,EANmD,KAM3CC,EAN2C,OAO5BpC,oBAAS,GAPmB,mBAOnDqC,EAPmD,KAO1CC,EAP0C,OAQ9BtC,oBAAS,GARqB,mBAQnDuC,EARmD,KAQ3CC,EAR2C,KAUlDC,EAAM,uCAAG,WAAOC,GAAP,SAAAlC,EAAA,sDACXkC,EAAEC,iBACFzC,EAAe0C,SAASC,uBAAuB,cAAc,GAAGC,UAAUC,MAAM,OAC/EC,EAAYzE,EAAawD,GACzBS,GAAU,GACV7C,QAAQC,IAAIqC,GACZtC,QAAQC,IAAIuC,GANF,2CAAH,sDAUNa,EAAc,SAACzE,EAAa0E,GAEhCtD,QAAQC,IAAImC,EAAWxD,EAAa0B,GACpC,IAAMiD,EAAO,CACXC,KAAM,CACJC,WAAY7E,EAAY4C,GACxBkC,UAAW,KACXC,WAAYL,IAIhBxC,MAAM,GAAD,OAVWH,sCAUX,SAAoB,CACvBI,OAAQ,OACRC,QAAS,CACP,eAAe,mBACf4C,cAAc,UAAD,OAAYtE,IAAQuE,IAAI,WAEvCC,KAAMC,KAAKC,UAAUT,KAEtBU,MAAK,SAAAhD,GAAQ,OAAIA,EAASC,UAC1B+C,MAAK,SAAAhD,GAAQ,OAAIwB,EAAUxB,EAASO,OAErCxB,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIqC,IAcR4B,EAAsB,SAAC1B,EAAQ2B,GAEjC,IAEMC,EAAiB,CACrBC,mBAAoB,CAClBC,QAAS9B,EACT+B,YAAaJ,IAGjBrD,MAAM,GAAD,OARWH,sCAQX,uBAAkC,CACrCI,OAAQ,OACRC,QAAS,CACP,eAAe,mBACf4C,cAAc,UAAD,OAAYtE,IAAQuE,IAAI,WAEvCC,KAAMC,KAAKC,UAAUI,KAEtBH,MAAK,SAAChD,GACL,OAAoB,IAAhBA,EAASuD,IACX7B,GAAW,GACJ1B,EAASC,QAGXD,MAUb,OA7CiB,SAACuB,GAChBF,EAAUmC,SAAQ,SAAAC,GAChB1E,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIyE,EAAMlD,IAClB0C,EAAoB1B,EAAQkC,EAAMlD,IAClCxB,QAAQC,IAAIyC,MAEZT,EAAYS,GACZR,EAAcM,GAgCfmC,CAASnC,GAMZ,qCACEI,GACA,6BACE,6CACA,0BAAMgC,SAAU9B,GACd,2BAAO1D,KAAK,SAASyF,MAAOzC,EAAW0C,SAAU,SAAC/B,GAAD,OAAOV,EAAaU,EAAEgC,OAAOF,QAAQG,YAAY,eAClG,kBAAC,EAAD,CAAkB5E,GAAI,SAAAI,GAAgB,OAAI+B,EAAa/B,MACvD,2BAAOpB,KAAK,SAASyF,MAAM,cAIhCjC,GACC,uC,sBC9GSqC,gBCsBAC,EAlBM,SAAC,GAAY,IAAX3B,EAAU,EAAVA,KAAU,EACLlD,mBAASkD,GADJ,mBACxB4B,EADwB,UAO/B,OACE,oCACE,6BACE,iDAAuBA,GACvB,4BAAQ1D,QAAS2D,EAAQC,KAAK,YAA9B,WACA,6DC8COC,EAnDK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAEPlF,mBAAS,IAFF,mBAE9BmF,EAF8B,KAErBC,EAFqB,OAGXpF,mBAAS,GAHE,mBAG9B8E,EAH8B,KAGvBO,EAHuB,OAIXrF,mBAAS,GAJE,mBAI9BsF,EAJ8B,KAIvBC,EAJuB,KAOrChF,qBAAU,WACR6E,EAAU,WAAV,cAAcD,GAAd,QAAuBD,OAEtB,IACHvF,QAAQC,IAAIuF,GACZxF,QAAQC,IAAI0F,GACZ3F,QAAQC,IAAIkF,GAEZnF,QAAQC,IAAI0F,EAAQ,iBAEpB,IAAME,EAAW,SAACC,GAChBF,EAASD,EAAQ,GACjBD,EAASP,EAAQW,GACjB9F,QAAQC,IAAIkF,GACZnF,QAAQC,IAAI0F,IAGd,OACE,oCAECA,IAAUI,OAAOC,KAAKR,GAASS,QAChC,6BACE,2CACA,wBAAIC,MAAO,CAACC,UAAW,SACpBJ,OAAOC,KAAKR,GAASnE,KAAI,SAAA+E,GAAM,OAC9B,4BACGZ,EAAQY,GACT,4BAAQ3E,QAAS,kBAAMoE,EAAS,KAAhC,KACA,4BAAQpE,QAAS,kBAAMoE,GAAU,KAAjC,WAOPF,IAAUI,OAAOC,KAAKR,GAASS,QAC9B,kBAAC,EAAD,CAAc1C,KAAM4B,MC2BXkB,EAtEE,SAAC7D,GAAY,IAAD,EACSnC,mBAAS,IADlB,mBACpBC,EADoB,KACRC,EADQ,OAEHF,mBAAS,IAFN,mBAEpBkD,EAFoB,KAEd+C,EAFc,OAGPjG,mBAASmC,GAHF,mBAGpBhB,EAHoB,KAIrB9B,GAJqB,KAIdyC,aAAY,SAAAjD,GAAK,OAAIA,EAAMQ,SAJb,EAKHW,oBAAS,GALN,mBAKpBkG,EALoB,KAKdC,EALc,KAMXC,cAEhBzG,QAAQC,IAAIuB,EAAGgB,QACfxC,QAAQC,IAAIuC,EAAOA,OAAS,iBAE5B5B,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACEN,EAAc,IACEI,sCAFlB,SAGyBG,MAAM,GAAD,OADZH,sCACY,kBAAqBa,EAAGgB,QAAU,CAC5DzB,OAAQ,MACRC,QAAS,CACP,eAAgB,sBANtB,cAGQC,EAHR,gBASiCA,EAASC,OAT1C,OASQwF,EATR,OAUE1G,QAAQC,IAAIyG,GACZnG,EAAcmG,EAAiB,IAXjC,6CADc,uBAAC,WAAD,wBAcdC,KACC,CAACJ,IAEJvG,QAAQC,IAAIK,GAgBZ,OACE,qCACEiG,GAEF,6BACE,yCACA,0BAAM3B,SApBS,SAAC7B,GAClBA,EAAEC,iBACFwD,GAAQ,GACRF,EAAQ,CAACM,MAAM,EAAMC,QAASnH,EAAKd,YAAY4C,KAC/C,IAAIsF,EAAM,GACVxG,EAAWe,KAAI,SAACC,GAAD,OACbwF,EAAIxF,EAASO,MAAQkB,EAAEgC,OAAOgC,SAASC,UAAU1F,EAASO,MAAMgD,SAElEyB,EAAQ,2BAAI/C,GAASuD,IACrB9G,QAAQC,IAAIsD,KAYPjD,EAAWe,KAAI,SAACC,GAAD,OACd,yBAAKC,IAAKD,EAASE,IACjB,8BAAOF,EAASO,MAChB,2BAAOzC,KAAK,OAAOyC,KAAMP,EAASO,OAClC,iCAGJ,2BAAOzC,KAAK,SAASyF,MAAM,WAK1B0B,GACD,kBAAC,EAAD,CAAahB,YAAahC,MC5DnB0D,EARK,SAAC,GAAc,IAAbzE,EAAY,EAAZA,OACpB,OACE,oCACE,kBAAC,EAAD,CAAUA,OAAQA,MC2BT0E,EA/BF,WACX,IAAMtI,EAAcuD,aAAY,SAACjD,GAAD,OAAWA,EAAMQ,KAAKd,eADrC,EAEqByB,qBAFrB,mBAEV8G,EAFU,KAEGC,EAFH,OAGW/G,mBAAS,IAHpB,mBAGVmC,EAHU,KAGFC,EAHE,KAQjB,OAHAzC,QAAQC,IAAIkH,GACZnH,QAAQC,IAAIuC,GAGV,oCACkB,MAAf5D,GAAuB,sCACvBA,GACC,6BACE,sCACA,kBAAC,EAAD,CAAYqD,YAAa,SAAAS,GAAO,OAAI0E,EAAe1E,IAAUR,cAAe,SAAAM,GAAM,OAAIC,EAAUD,OAKpF,GAAf2E,GACC,6BACE,kBAAC,EAAD,CAAa3E,OAAQA,OCClB6E,EAAc,uCAAG,WAAOC,EAAOC,GAAd,uBAAA1G,EAAA,4DACZF,sCACV4C,EAAO,CACXlE,KAAM,CACJiI,MAAOA,EACPC,SAAUA,IALc,SASLzG,MAAM,GAAD,OARZH,sCAQY,SAAoB,CAC9CI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElB8C,KAAMC,KAAKC,UAAUT,KAdK,cAStBtC,EATsB,yBAkBNA,EAASD,QAAQ6C,IAAI,iBAAiBT,MAAM,KAAK,GAlB3C,cAkBpBzE,EAlBoB,iBAmBPsC,EAASC,OAnBF,eAmBpB7B,EAnBoB,OAoBpBmI,EAAY,CAAE7I,QAAOU,QApBD,kBAqBnBmI,GArBmB,kCAuB1BxH,QAAQyH,MAAR,MACAC,MAAM,mCAxBoB,0DAAH,wDCsBZC,EA7CD,WACZ,IAAMC,EAAWC,cACX7I,EAAWmD,aAAY,SAACjD,GAAD,OAAWA,EAAMQ,KAAKV,YAFjC,EAGQqB,mBAAS,IAHjB,mBAGXiH,EAHW,KAGJQ,EAHI,OAIczH,mBAAS,IAJvB,mBAIXkH,EAJW,KAIDQ,EAJC,KAgBlB,OACE,oCACE,uCACA,8BACI/I,GACA,0BAAM4F,SAfA,SAAC7B,GACbA,EAAEC,iBACWqE,EAAeC,EAAOC,GAC9BtD,MAAK,SAAUmC,GAClBwB,ECbG,CACLxI,KZAyB,gBYCzBC,KDWwB+G,ECVxBpH,UAAU,IDWRM,IAAQ0I,IAAI,QAAS5B,EAAOzH,OAC5BW,IAAQ0I,IAAI,OAAQ5B,EAAO/G,WAUrB,2BACED,KAAK,OACL4F,YAAY,QACZH,MAAOyC,EACPxC,SAAU,SAAC/B,GAAD,OAAO+E,EAAS/E,EAAEgC,OAAOF,QACnCoD,UAAQ,IAEV,2BACE7I,KAAK,WACL4F,YAAY,WACZH,MAAO0C,EACPzC,SAAU,SAAC/B,GAAD,OAAOgF,EAAYhF,EAAEgC,OAAOF,QACtCoD,UAAQ,IAEV,2BAAO7I,KAAK,SAASyF,MAAM,aAG9B7F,GAAY,sDEaNkJ,EAtDA,WACb,IAAMnJ,EAAeoD,aAAY,SAACjD,GAAD,OAAWA,EAAMQ,KAAKX,gBADpC,EAEOsB,mBAAS,IAFhB,mBAEZiH,EAFY,KAELQ,EAFK,OAGazH,mBAAS,IAHtB,mBAGZkH,EAHY,KAGFQ,EAHE,OAIuC1H,mBAAS,IAJhD,mBAIZ8H,EAJY,KAIWC,EAJX,OAKa/H,mBAAS,IALtB,mBAKZgI,EALY,KAKFC,EALE,KAWnB,OACE,oCACE,uCACA,8BACIvJ,GACA,0BAAM6F,SAVD,SAAC7B,GACZA,EAAEC,iBHT2B,SAC/BsE,EACAC,EACAY,EACAE,GAEA,IACM9E,EAAO,CACXlE,KAAM,CACJiI,MAAOA,EACPC,SAAUA,EACVY,sBAAuBA,EACvBE,SAAUA,IAIdvH,MAAM,GAAD,OAVWH,sCAUX,UAAqB,CACxBI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElB8C,KAAMC,KAAKC,UAAUT,KAEpBU,MAAK,SAAChD,GAAD,OAAcA,EAASC,UAC5BqH,OAAM,SAACd,GAAD,OAAWzH,QAAQyH,MAAMA,MGdhCe,CAAkBlB,EAAOC,EAAUY,EAAuBE,KASlD,2BACEjJ,KAAK,OACL4F,YAAY,QACZH,MAAOyC,EACPxC,SAAU,SAAC/B,GAAD,OAAO+E,EAAS/E,EAAEgC,OAAOF,QACnCoD,UAAQ,IAEV,2BACE7I,KAAK,OACL4F,YAAY,WACZH,MAAOwD,EACPvD,SAAU,SAAC/B,GAAD,OAAOuF,EAAYvF,EAAEgC,OAAOF,QACtCoD,UAAQ,IAEV,2BACE7I,KAAK,WACL4F,YAAY,WACZH,MAAO0C,EACPzC,SAAU,SAAC/B,GAAD,OAAOgF,EAAYhF,EAAEgC,OAAOF,QACtCoD,UAAQ,IAEV,2BACE7I,KAAK,WACL4F,YAAY,wBACZH,MAAOsD,EACPrD,SAAU,SAAC/B,GAAD,OAAOqF,EAAyBrF,EAAEgC,OAAOF,QACnDoD,UAAQ,IAEV,2BAAO7I,KAAK,SAASyF,MAAM,aAG9B9F,GAAgB,wD,iBClBV0J,EA3BA,WACb,IAAMb,EAAWC,cAMjB,OACE,4BACE,4BACA,yBAAK/F,UAAU,OACb,kBAAC,IAAD,CAAQ1C,KAAK,WAAU,kBAAC,IAAD,CAAMsJ,GAAG,KAAT,WAGzB,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,WAEF,4BACE,4BAAQjH,QAlBC,WJiDfX,MAAM,GAAD,OADWH,sCACX,UAAqB,CACxBI,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB4C,cAAc,UAAD,OAAYtE,IAAQuE,IAAI,aInDvC+D,EF6BK,CACLxI,KZpC0B,iBYqC1BT,MAAO,KACPC,YAAa,KACbI,UAAU,MEjBN,aCQO2J,EAzBH,WACV,OACE,oCACE,2DACA,kBAAC,IAAD,CAAQvD,QAASA,GACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwD,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KAChB,kBAAC,EAAD,WCtBZE,IAASC,OACP,kBAAC,IAAD,CAAUpJ,MAAOqJ,GACf,kBAAC,EAAD,OAEF/F,SAASgG,cAAc,W","file":"static/js/main.7858de4e.chunk.js","sourcesContent":["import {\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  // REGISTER_FAIL,\n  // REGISTER_LOADING,\n  LOGOUT_SUCCESS,\n  // LOGOUT_FAIL,\n  // LOGOUT_LOADING,\n} from \"./userAuthTypes\";\nimport Cookies from \"js-cookie\";\n\nconst initialState = {\n  token: null,\n  currentUser: null,\n  status: null,\n  isLoading: true,\n  isRegistered: false,\n  isLogged: false,\n};\n\nconst userAuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        type: LOGIN_SUCCESS,\n        token: action.user.token,\n        currentUser: action.user.user,\n        isLoading: false,\n        isRegistered: true,\n        isLogged: true,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        type: LOGIN_FAIL,\n        status: action.status,\n        isLoading: false,\n      };\n    case LOGIN_LOADING:\n      return {\n        ...state,\n        type: LOGIN_LOADING,\n        status: action.status,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        type: REGISTER_SUCCESS,\n        user: action.user,\n        status: action.status,\n        isLoading: false,\n        isRegistered: true,\n      };\n    case LOGOUT_SUCCESS:\n      Cookies.remove(\"token\");\n      Cookies.remove(\"user\");\n      return {\n        ...state,\n        token: null,\n        currentUser: null,\n        isLogged: false,\n        isRegistered: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userAuthReducer;\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const REGISTER_LOADING = \"REGISTER_LOADING\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\nexport const LOGOUT_LOADING = \"LOGOUT_LOADING\";\n","import { createStore, combineReducers } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport userAuthReducer from \"./../authentication/redux/userAuthReducer\";\n\nconst rootReducer = combineReducers({\n  auth: userAuthReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nstore.subscribe(() => console.log(store.getState()));\n\nexport default store;\n","import React, { useEffect, useState } from \"react\";\n\n\nexport const SelectCategories = ({tg}) => {\n  const [categories, setCategories] = useState([]);\n  const [selectCategories, setSelectCategories] = useState([]);\n  const api_url = process.env.REACT_APP_BASE_URL;\n  \n  useEffect(()=>{\n    async function fetchData() {\n        \n      const response = await fetch(`${api_url}categories`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n          \n        });\n        const text = await response.json();\n        setCategories(text);\n    }\n    fetchData();\n      \n  },[])\n  \n  const transfer = (category) => {\n    setCategories( categories.filter(element => element.id !== category.id) );\n    setSelectCategories([...selectCategories, category]) \n  };\n\n  useEffect(() => {\n    tg(selectCategories)\n  }, [selectCategories])\n\n  return (\n    <>\n      <div>\n          <h1> All Catégories</h1>\n          <ul>\n      {categories.map(category =>\n        \n          <li key={category.id} onClick={() => transfer(category)}>{category.name}</li>\n        \n      )}\n      </ul>\n      <h1> Selected Catégories</h1>\n          <ul className=\"categories\">\n      {selectCategories.map(selectCategory =>\n        \n          <li key={selectCategory.id} >{selectCategory.name}</li>\n        \n      )}\n      </ul>\n      </div>\n    </>\n  );\n};\n\n\n","// new file\nimport React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux'\nimport { SelectCategories } from \"../components/SelectCategories\";\nimport Cookies from 'js-cookie'\n\n\nexport const CreateGame = ({isGameReady, gameIdForHome}) => {\n  const currentUser = useSelector(state => state.auth.currentUser)\n  const auth = useSelector(state => state.auth)\n  const [maxPlayer, setMaxPlayer] = useState('')\n  const [categories, setCategories] = useState([])\n  const [testCateg, setTestCateg] = useState([])\n  const [gameId, setGameId] = useState('')\n  const [isReady, setIsReady] = useState(false)\n  const [isSent, setIsSent] = useState(false)\n\n    const create = async (e) => {\n        e.preventDefault()\n        setCategories( document.getElementsByClassName(\"categories\")[0].innerText.split(\"\\n\") )\n         CreateAGame(currentUser, maxPlayer)\n         setIsSent(true)\n         console.log(testCateg)\n         console.log(gameId)\n        \n    }  \n    \n    const CreateAGame = (currentUser, maxGuests) => {\n      const api_url = process.env.REACT_APP_BASE_URL;\n      console.log(maxPlayer, currentUser, categories)\n      const data = {\n        game: {\n          creator_id: currentUser.id, \n          winner_id: null,\n          max_guests: maxGuests\n        }\n      }  \n      \n      fetch(`${api_url}games`, {\n        method: 'post', \n        headers: {\n          \"Content-Type\":\"application/json\", \n          Authorization: `Bearer ${Cookies.get(\"token\")}`\n        },\n        body: JSON.stringify(data),\n      })\n      .then(response => response.json())\n      .then(response => setGameId(response.id))\n\n      console.log(gameId)\n      console.log(testCateg)      \n    }\n\n    const osefTest = (gameId) => {\n      testCateg.forEach(categ => { \n        console.log(gameId)\n        console.log(categ.id)\n        createJoinCategGame(gameId, categ.id)\n        console.log(isReady)\n        })\n        isGameReady(isReady)\n        gameIdForHome(gameId)\n    }\n\n    const createJoinCategGame = (gameId, categId) => {\n\n        const api_url = process.env.REACT_APP_BASE_URL;\n       \n        const dataCategGames = {\n          join_category_game: {\n            game_id: gameId , \n            category_id: categId\n          }\n        }\n        fetch(`${api_url}join_category_games`, {\n          method: 'post', \n          headers: {\n            \"Content-Type\":\"application/json\", \n            Authorization: `Bearer ${Cookies.get(\"token\")}`\n          }, \n          body: JSON.stringify(dataCategGames)\n        })\n        .then((response) => {\n          if (response.ok === true) {\n            setIsReady(true)\n            return response.json()\n            \n          }\n          return response\n        })\n    \n       }\n\n       osefTest(gameId)\n\n           \n  \n    \n    return(\n    <>\n    {!isSent &&\n      <div>\n        <h1>Game creation</h1>    \n        <form onSubmit={create}>\n          <input type='number' value={maxPlayer} onChange={(e) => setMaxPlayer(e.target.value)} placeholder=\"max player\"></input>\n          <SelectCategories tg={selectCategories => setTestCateg(selectCategories)}/>\n          <input type=\"submit\" value=\"Envoyer\"/>\n        </form>\n      </div>\n    }\n    {isSent && \n      <>\n      </>\n    }\n    </>\n  )\n}\n\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","// Display the winner\n// Buttons : Score, Replay, Leave\nimport React, {useState} from 'react';\nimport history from '../../../history'\n\nconst GameFinished = ({data}) => {\n  const [score, setScore] = useState(data)\n\n    const playAgain = () => {\n      history.push('/login')\n    }\n\n  return(\n    <>\n      <div>\n        <p> le score est de : {score}</p>\n        <button onClick={history.push('/signup')}>Rejouer</button>\n        <button>Voir les scores finaux</button>\n      </div>\n    </>\n  )\n}\n\nexport default GameFinished","// The GameGrid part is finished.\n// Someone clicked on the stop button\n// Each line is an answer from another player.\n// There are checkboxes to say if the answer is a word corresponding to the category or not.\nimport React, {useState, useEffect} from 'react';\nimport uniqid from 'uniqid'\nimport history from '../../../history'\nimport {Link} from 'react-router-dom'\nimport GameFinished from './GameFinished'\n\n\n\nconst GameMarking = ({dataResults}) => {\n\n  const [results, setResults] = useState([]);\n  const [score, setScore] = useState(0)\n  const [count, setCount] = useState(0)\n\n\n  useEffect(() => {\n    setResults(...results, dataResults)\n\n  }, [])\n  console.log(results)\n  console.log(count)\n  console.log(score)\n\n  console.log(count + ' from outside')\n\n  const addScore = (int) => {\n    setCount(count + 1 )\n    setScore(score + int)\n    console.log(score)\n    console.log(count)\n  }\n\n  return (\n    <>\n\n    {count !== Object.keys(results).length && \n    <div>\n      <h1>GameMarking</h1>\n      <ul style={{listStyle: \"none\"}}>\n        {Object.keys(results).map(result => \n          <li>\n            {results[result]}\n            <button onClick={() => addScore(1)}>V</button>\n            <button onClick={() => addScore(-1)}>X</button>\n          </li>\n          )}\n      </ul>\n    </div>\n    }\n\n    {count === Object.keys(results).length &&\n      <GameFinished data={score}/>\n    }\n\n    \n    </>\n  )\n}\n\nexport default GameMarking;","// First part of a game\n// We see the random chosen Letter\n// Everyone is filling the categories form\n// There is a \"Stop\" button for the first player who finishes\nimport React, { useEffect, useState } from \"react\";\nimport {useSelector} from 'react-redux'\nimport { fetchGame } from \"../fetchCurrentGame\";\nimport { createPortal } from \"react-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport GameMarking from './GameMarking';\n\nconst GameGrid = (gameId) => {\n  const [categories, setCategories] = useState([]);\n  const [data, setData] = useState({})\n  const [id, setId] = useState(gameId);\n  const auth = useSelector(state => state.auth)\n  const [test, setTest] = useState(false)\n  const history = useHistory();\n\n  console.log(id.gameId)\n  console.log(gameId.gameId + 'from gameGrid')\n\n  useEffect(() => {\n    async function fetchGame() {\n      setCategories([])\n      const API_URL = process.env.REACT_APP_BASE_URL;\n      const response = await fetch(`${API_URL}/games/${id.gameId}`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const categoriesObject = await response.json();\n      console.log(categoriesObject)\n      setCategories(categoriesObject[1]);\n    }\n    fetchGame();\n  }, [test]);\n\n  console.log(categories)\n\n  const showInputs = (e) => {\n    e.preventDefault()\n    setTest(true)\n    setData({stop: true, user_id: auth.currentUser.id})\n    let tmp = {}\n    categories.map((category) => (\n      tmp[category.name] = e.target.elements.namedItem(category.name).value\n    ))\n    setData({...data, ...tmp})\n    console.log(data)\n      \n\n  };\n\n  return (\n    <>\n    {!test &&\n    \n    <div>\n      <h1>Game Grid</h1>\n      <form onSubmit={showInputs}>\n        {categories.map((category) => (\n          <div key={category.id}>\n            <span>{category.name}</span>\n            <input type=\"text\" name={category.name} />\n            <br />\n          </div>\n        ))}\n        <input type=\"submit\" value=\"STOP\" />\n      </form>\n\n    </div>\n    }\n        {test && \n        <GameMarking dataResults={data}/>}\n      \n    </>\n  );\n};\n\nexport default GameGrid;\n","// Will display in order each step of the game\n// 1. GameGrid\n// 2. GamerMarking\n// 3. GameFinished\n\nimport React from \"react\";\nimport GameGrid from \"../components/GameGrid\";\n\nconst CurrentGame = ({gameId}) => {\n  return (\n    <>\n      <GameGrid gameId={gameId}/>\n    </>\n  );\n};\n\nexport default CurrentGame;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CreateGame } from \"../../game/CreateGame/pages/CreateGame\";\nimport { Link } from \"react-router-dom\";\nimport CurrentGame from '../../game/CurrentGame/pages/CurrentGame'\n\n\nconst Home = () => {\n  const currentUser = useSelector((state) => state.auth.currentUser);\n  const [gameIsReady, setGameIsReady] = useState()\n  const [gameId, setGameId] = useState('')\n  // GetProfile(currentUser.id);\n  console.log(gameIsReady)\n  console.log(gameId)\n\n  return (\n    <>\n      {currentUser == null && <h1> HOME </h1>}\n      {currentUser && (\n        <div>\n          <h1> HOME </h1>\n          <CreateGame isGameReady={isReady => setGameIsReady(isReady)} gameIdForHome={gameId => setGameId(gameId)}/>\n        </div>\n      )}\n      \n\n      {gameIsReady == true &&\n        <div>\n          <CurrentGame gameId={gameId}/>\n        </div>\n      \n      }\n\n     \n    </>\n  );\n};\n\nexport default Home;\n","import Cookies from \"js-cookie\";\n\nexport const fetchUserRegister = (\n  email,\n  password,\n  password_confirmation,\n  username\n) => {\n  const api_url = process.env.REACT_APP_BASE_URL;\n  const data = {\n    user: {\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n      username: username,\n    },\n  };\n\n  fetch(`${api_url}signup`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => response.json())\n    .catch((error) => console.error(error));\n};\n\nexport const fetchUserLogin = async (email, password) => {\n  const api_url = process.env.REACT_APP_BASE_URL;\n  const data = {\n    user: {\n      email: email,\n      password: password,\n    },\n  };\n\n  const response = await fetch(`${api_url}login`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  try {\n    const token = await response.headers.get(\"authorization\").split(\" \")[1];\n    const user = await response.json();\n    const userToLog = { token, user };\n    return userToLog;\n  } catch (error) {\n    console.error(error);\n    alert(\"Aucun utilisateur correspondant\");\n  }\n};\n\nexport const fetchUserLogout = () => {\n  const api_url = process.env.REACT_APP_BASE_URL;\n  fetch(`${api_url}logout`, {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${Cookies.get(\"token\")}`,\n    },\n  });\n};\n\nexport const fetchGetProfile = (id) => {\n  const api_url = process.env.REACT_APP_BASE_URL;\n  fetch(`${api_url}/users/${id}`, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${Cookies.get(\"token\")}`,\n    },\n  }).then((response) => response.json());\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUserLogin } from \"../fetchUserAuth\";\nimport { loginSuccess } from \"../redux/userAuthActions\";\nimport Cookies from \"js-cookie\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLogged = useSelector((state) => state.auth.isLogged);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (e) => {\n    e.preventDefault();\n    const user = fetchUserLogin(email, password);\n    user.then(function (result) {\n      dispatch(loginSuccess(result));\n      Cookies.set(\"token\", result.token);\n      Cookies.set(\"user\", result.user);\n    });\n  };\n\n  return (\n    <>\n      <h1> Login </h1>\n      <div>\n        {!isLogged && (\n          <form onSubmit={login}>\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <input type=\"submit\" value=\"Envoyer\" />\n          </form>\n        )}\n        {isLogged && <p>Connexion réussie</p>}\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import * as actionTypes from \"./userAuthTypes\";\n\nexport const loginSuccess = (response) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    user: response,\n    isLogged: true,\n  };\n};\n\nexport const loginFail = (response) => {\n  return {\n    type: actionTypes.LOGIN_FAIL,\n  };\n};\n\nexport const loginLoading = () => {\n  return {\n    type: actionTypes.LOGIN_LOADING,\n  };\n};\n\nexport const registerSuccess = (response) => {\n  return {\n    type: actionTypes.REGISTER_SUCCESS,\n  };\n};\n\nexport const registerFail = (response) => {\n  return {\n    type: actionTypes.REGISTER_FAIL,\n  };\n};\n\nexport const registerLoading = () => {\n  return {\n    type: actionTypes.REGISTER_LOADING,\n  };\n};\n\nexport const logoutSuccess = () => {\n  return {\n    type: actionTypes.LOGOUT_SUCCESS,\n    token: null,\n    currentUser: null,\n    isLogged: false,\n  };\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchUserRegister } from \"../fetchUserAuth\";\n\nconst Signup = () => {\n  const isRegistered = useSelector((state) => state.auth.isRegistered);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password_confirmation, setPassword_confirmation] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const test = (e) => {\n    e.preventDefault();\n    fetchUserRegister(email, password, password_confirmation, username);\n  };\n\n  return (\n    <>\n      <h1>Sign up</h1>\n      <div>\n        {!isRegistered && (\n          <form onSubmit={test}>\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"password_confirmation\"\n              value={password_confirmation}\n              onChange={(e) => setPassword_confirmation(e.target.value)}\n              required\n            />\n            <input type=\"submit\" value=\"Envoyer\" />\n          </form>\n        )}\n        {isRegistered && <p>Inscription réussie</p>}\n      </div>\n    </>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Button } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchUserLogout } from \"../../authentication/fetchUserAuth\";\nimport { logoutSuccess } from \"../../authentication/redux/userAuthActions\";\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    fetchUserLogout();\n    dispatch(logoutSuccess());\n  };\n  return (\n    <ul>\n      <li>\n      <div className=\"App\">\n        <Button type=\"primary\"><Link to=\"/\">Home</Link></Button>\n      </div>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n      <li>\n        <Link to=\"/signup\">Signup</Link>\n      </li>\n      <li>\n        <button onClick={logout}>Logout</button>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Button } from 'antd';\nimport './App.scss';\nimport Home from \"./application/pages/Home\";\nimport Login from \"./authentication/pages/Login\";\nimport Signup from \"./authentication/pages/Signup\";\nimport Navbar from \"./application/components/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CurrentGame from \"./game/CurrentGame/pages/CurrentGame\";\nimport history from \"./history\";\n\nconst App = () => {\n  return (\n    <>\n      <h1>This is a simple react app!</h1>\n      <Router history={history}>\n        <Navbar />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/current_game\">\n            <CurrentGame />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport reduxStore from \"./application/reduxStore\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={reduxStore}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}